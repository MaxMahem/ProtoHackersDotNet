<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
						 xmlns:md="clr-namespace:Markdown.Avalonia;assembly=Markdown.Avalonia"
						 xmlns:ctxt="clr-namespace:ColorTextBlock.Avalonia;assembly=ColorTextBlock.Avalonia"
						 xmlns:interAct="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
						 xmlns:icons="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
						 xmlns:li="using:LoadingIndicators.Avalonia"
						 xmlns:mv="using:ProtoHackersDotNet.GUI.MainView"
						 xmlns:mvc="using:ProtoHackersDotNet.GUI.MainView.Client"
						 xmlns:behave="using:ProtoHackersDotNet.GUI.Behaviors"
						 xmlns:i="using:ProtoHackersDotNet.Servers.Interface"
						 xmlns:is="using:ProtoHackersDotNet.Servers.Interface.Server.Events"
						 xmlns:ic="using:ProtoHackersDotNet.Servers.Interface.Client.Events"
             x:Class="ProtoHackersDotNet.GUI.MainView.MainView"
             x:DataType="mv:MainViewModel"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450">
  <Design.DataContext>
    <!--<mv:MainViewModel />-->
  </Design.DataContext>
	<Grid ColumnDefinitions="*, 1, 4*, 0" RowDefinitions="*, auto" Name="MainGrid">
		<DockPanel Name="ServerData" Grid.Column="0" Grid.Row="0" DataContext="{Binding ServerManager}">
			<DockPanel DockPanel.Dock="Top" Name="ServerSelect">
				<Label DockPanel.Dock="Left" Target="{Binding #TypeDropdown}" Classes="h1">Server</Label>
				<ComboBox Name="TypeDropdown" HorizontalAlignment="Right"
									ItemsSource="{Binding Servers}" SelectedItem="{Binding Server}"
									IsEnabled="{Binding !Server.Listening^}">
					<ComboBox.ItemTemplate>
						<DataTemplate>
							<TextBlock Text="{Binding Name}"/>
						</DataTemplate>
					</ComboBox.ItemTemplate>
				</ComboBox>
			</DockPanel>
			<StackPanel DockPanel.Dock="Bottom" Name="EndPointTabs">
				<TabControl Name="LocalRemote">
					<TabItem Header="Local">
						<Grid ColumnDefinitions="1*, 2*" RowDefinitions="auto, auto">
							<Label    Grid.Column="0" Grid.Row="0" Target="{Binding #LocalIP}"
												VerticalAlignment="Center" Classes="h2">IP</Label>
							<ComboBox Name="LocalIP" Grid.Column="1" Grid.Row="0"
												HorizontalAlignment="Stretch" Classes="mono"
												ItemsSource="{Binding LocalEndPoint.SelectableIPs}" SelectedItem="{Binding LocalEndPoint.IP}"
												IsEnabled="{Binding !Server.Listening^}" />
							<Label         Grid.Column="0" Grid.Row="1" Target="{Binding #LocalPort}"
														 VerticalAlignment="Center" Classes="h2">Port</Label>
							<NumericUpDown Grid.Column="1" Grid.Row="1" Name="LocalPort"
														 ShowButtonSpinner="False" Classes="mono"
														 Classes.invalid="{Binding !LocalEndPoint.PortValid^}"
														 Value="{Binding LocalEndPoint.Port}"
														 Minimum="0" Maximum="65535" FormatString="0"
														 IsEnabled="{Binding !Server.Listening^}" />
						</Grid>
					</TabItem>
					<TabItem Header="Remote">
						<Grid ColumnDefinitions="1*, 2*" RowDefinitions="auto, auto">
							<Label    Grid.Column="0" Grid.Row="0" Target="{Binding #RemoteIP}"
												VerticalAlignment="Center" Classes="h2">IP</Label>
							<TextBox Grid.Column="1" Grid.Row="0" Name="RemoteIP"
											 HorizontalAlignment="Stretch" Classes="mono"
											 Classes.invalid="{Binding !RemoteEndPoint.IPValid^}"
											 Text="{Binding RemoteEndPoint.IPText}"
											 IsEnabled="{Binding !TestServerCommand.TestRunning^}" />
							<Label         Grid.Column="0" Grid.Row="1" Target="{Binding #RemotePort}"
														 VerticalAlignment="Center" Classes="h2">Port</Label>
							<NumericUpDown Grid.Column="1" Grid.Row="1" Name="RemotePort"
														 Minimum="0" Maximum="65535" FormatString="0"
														 ShowButtonSpinner="False" Classes="mono"
														 Classes.invalid="{Binding !RemoteEndPoint.PortValid^}"
														 Value="{Binding RemoteEndPoint.Port}"
														 IsEnabled="{Binding !TestServerCommand.TestRunning^}" />
						</Grid>
					</TabItem>
				</TabControl>
			</StackPanel>
			<Border Name="DescriptionBorder" BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}" BorderThickness="1" CornerRadius="3">
				<md:MarkdownScrollViewer Markdown="{Binding Server.Problem.Description}">
					<md:MarkdownScrollViewer.Styles>
						<Style Selector="ctxt|CTextBlock.Heading1">
							<Setter Property="FontSize" Value="18"/>
							<Setter Property="FontWeight" Value="Bold"/>
						</Style>
						<Style Selector="ctxt|CTextBlock.Heading2">
							<Setter Property="FontSize" Value="16"/>
							<Setter Property="FontWeight" Value="Bold"/>
						</Style>
						<Style Selector="ctxt|CTextBlock.Heading3">
							<Setter Property="FontSize" Value="14"/>
							<Setter Property="FontWeight" Value="Bold"/>
							<Setter Property="Foreground" Value="{DynamicResource TextControlForeground}" />
						</Style>
					</md:MarkdownScrollViewer.Styles>
				</md:MarkdownScrollViewer>
			</Border>
		</DockPanel>
		<UniformGrid Name="MainControl" DataContext="{Binding ServerManager}" 
								 Grid.Column="0" Grid.Row="1" Columns="4">
			<li:LoadingIndicator Name="LoadingIndicator" Mode="Wave" SpeedRatio="1.0"
													 IsActive="{Binding TestServerCommand.TestRunning^}"
													 MinWidth="0" Width="{Binding #TestButton.Bounds.Width}"
													 MinHeight="0" Height="{Binding #TestButton.Bounds.Height}" 
													 HorizontalAlignment="Stretch" />
			<Button Command="{Binding TestServer}" Name="TestButton">
				<Button.IsEnabled>
					<MultiBinding Converter="{x:Static BoolConverters.And}">
						<Binding Path="Server.Listening^"/>
						<Binding Path="RemoteEndPoint.Valid^"/>
						<Binding Path="!TestServerCommand.TestRunning^"/>
					</MultiBinding>
				</Button.IsEnabled>
				<TextBlock>Test</TextBlock>
			</Button>
			<Button Command="{Binding StopServer}" IsEnabled="{Binding Server.Listening^}">Stop</Button>
			<Button Command="{Binding StartServer}" IsEnabled="{Binding !Server.Listening^}">
				<Button.IsEnabled>
					<MultiBinding Converter="{x:Static BoolConverters.And}">
						<Binding Path="!Server.Listening^"/>
						<Binding Path="LocalEndPoint.Valid^"/>
					</MultiBinding>
				</Button.IsEnabled>
				<TextBlock>Start</TextBlock>
			</Button>
		</UniformGrid>
		<GridSplitter Grid.Column="1" ResizeDirection="Columns" MinWidth="2" Margin="5 5"/>
		<Grid Grid.Column="2" Grid.Row="0" ColumnDefinitions="*" RowDefinitions="Auto, 1, *" Name="RightGrid">
			<Expander Grid.Column="0" Grid.Row="0" Name="ClientExpander" HorizontalAlignment="Stretch"
								MinHeight="0" Padding="0" Classes="client" MaxHeight="{Binding #MaxExpander.Bounds.Height}"
								DataContext="{Binding ClientManager}"
								Header="{Binding ActiveClientCount^, StringFormat='Clients (Active {0})'}">
				<DockPanel>
					<Button DockPanel.Dock="Bottom" HorizontalAlignment="Right" Command="{Binding ClearDisconnectedClients}">Clear Clients</Button>
					<Border BorderThickness="1" CornerRadius="0 0 3 3"
									BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
						<DockPanel>
							<Grid DockPanel.Dock="Top" ColumnDefinitions="3*, *, *, *, *">
								<Label Grid.Column="0" Classes="h2 header">Source</Label>
								<Label Grid.Column="1" Classes="h2 header" HorizontalContentAlignment="Center">Status</Label>
								<Label Grid.Column="2" Classes="h2 header" HorizontalContentAlignment="Right">Age</Label>
								<Label Grid.Column="3" Classes="h2 header" HorizontalContentAlignment="Right">Recieved</Label>
								<Label Grid.Column="4" Classes="h2 header" HorizontalContentAlignment="Right">Transmitted</Label>
							</Grid>
							<ListBox Name="ClientList" ItemsSource="{Binding Clients}">
								<ItemsControl.ItemsPanel><ItemsPanelTemplate><StackPanel/></ItemsPanelTemplate></ItemsControl.ItemsPanel>
								<ListBox.DataTemplates><mvc:ClientDataTemplate/></ListBox.DataTemplates>
								<interAct:Interaction.Behaviors>
									<behave:ScrollToEndListBoxBehavior/>
								</interAct:Interaction.Behaviors>
							</ListBox>
						</DockPanel>
					</Border>
				</DockPanel>
			</Expander>
			<GridSplitter Grid.Column="0" Grid.Row="1"></GridSplitter>
			<DockPanel Grid.Column="0" Grid.Row="2" DataContext="{Binding MessageManager}">
				<TextBlock DockPanel.Dock="Top" Margin="16 8 0 8" Classes="h2"
									 Text="{Binding MessageCount^, StringFormat='Messages ({0})'}" />
				<Border BorderThickness="1" CornerRadius="0 0 3 3"
							  BorderBrush="{DynamicResource SystemControlForegroundBaseMediumBrush}">
					<Grid IsSharedSizeScope="True" ColumnDefinitions="*" RowDefinitions="*">
						<DockPanel Grid.Column="0" Grid.Row="0">
							<Grid Name="MessageHeader" DockPanel.Dock="Top">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="2*" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="5*" />
								</Grid.ColumnDefinitions>
								<Label Name="SourceLabel" Grid.Column="0" Content="Source" 
											 Classes="h2 header filterLabel"
											 Tapped="SourceLabel_Tapped">
									<FlyoutBase.AttachedFlyout>
										<Flyout Placement="BottomEdgeAlignedLeft">
											<ItemsControl ItemsSource="{Binding SourceFilter.Entries}"
															 Classes="filterList">
												<ItemsControl.ItemTemplate>
													<DataTemplate>
														<CheckBox Content="{Binding Entry}" IsChecked="{Binding Selected}" Classes="filterItem"/>
													</DataTemplate>
												</ItemsControl.ItemTemplate>
											</ItemsControl>
										</Flyout>
									</FlyoutBase.AttachedFlyout>
								</Label>
								<Label Grid.Column="1" Classes="h2 header" HorizontalContentAlignment="Center">Timestamp</Label>
								<Label Name="MessageLabel" Grid.Column="3" Content="Message" 
											 Classes="h2 header filterLabel" HorizontalContentAlignment="Right"
											 Tapped="MessageLabel_Tapped">
									<FlyoutBase.AttachedFlyout>
										<Flyout Placement="BottomEdgeAlignedRight">
											<TextBox Text="{Binding MessageSearch.LatestValue}" Watermark="Search Term" />
										</Flyout>
									</FlyoutBase.AttachedFlyout>
								</Label>
							</Grid>
							<ListBox Name="MessageList" ItemsSource="{Binding Messages}"
											 ItemTemplate="{StaticResource MessageGridTemplate}">
								<interAct:Interaction.Behaviors>
									<behave:ScrollToEndListBoxBehavior/>
								</interAct:Interaction.Behaviors>
							</ListBox>
						</DockPanel>
					</Grid>
				</Border>
			</DockPanel>
		</Grid>
		<DockPanel Name="MessageControls" Grid.Column="2" Grid.Row="1">
			<Button DockPanel.Dock="Right" Command="{Binding MessageManager.ClearMessages}">Clear Messages</Button>
			<StackPanel DockPanel.Dock="Left" Orientation="Horizontal">
				<Label VerticalAlignment="Center" Target="{Binding #LogToggle}">Message Logging</Label>
				<ToggleSwitch Name="LogToggle" IsChecked="{Binding MessageManager.LoggingEnabled}" IsEnabled="{Binding !ServerManager.Server.Listening^}" />
				<TextBlock Text="{Binding MessageManager.LogFileName}" Margin="5 0 0 0" VerticalAlignment="Center" />
			</StackPanel>
		</DockPanel>
		<Grid Grid.Column="3" Grid.Row="0" Grid.RowSpan="2" RowDefinitions="1*, 2*" ColumnDefinitions="0">
			<Grid Grid.Column="0" Grid.Row="0" Name="MaxExpander" />
			<Grid Grid.Column="0" Grid.Row="1"/>
		</Grid>
	</Grid>
</UserControl>